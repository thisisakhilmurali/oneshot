package com.tasks.problem;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.Reader;
import java.util.List;
import com.opencsv.bean.CsvToBean;
import com.opencsv.bean.CsvToBeanBuilder;
public class TransactionService {
	
	private List<Transaction> transactions;

    public List<Transaction> getAllTransactions() {
        try {
            Reader reader = new BufferedReader(new FileReader("transactions.csv"));
            CsvToBean<Transaction> csvToBean = new CsvToBeanBuilder<Transaction>(reader)
                    .withType(Transaction.class)
                    .withIgnoreLeadingWhiteSpace(true)
                    .build();

            transactions = csvToBean.parse();
            reader.close();

        } catch (Exception e) {
            System.out.println("Error reading CSV file: " + e.getMessage());
        }

        return transactions;

    }




    public double getTotalTransactionAmount() {

        if (transactions == null) {
            transactions = getAllTransactions();
        }




        double totalAmount = 0d;
        for (Transaction transaction : transactions) {
            totalAmount += transaction.getAmount();
        }

        return totalAmount;

    }




    public Transaction getTransactionWithHighestAmount() {
        if (transactions == null) {
            transactions = getAllTransactions();
        }

        Transaction highestTransaction = null;
        double highestAmount = Double.MIN_VALUE;

        for (Transaction transaction : transactions) {
            if (transaction.getAmount() > highestAmount) {
                highestAmount = transaction.getAmount();
                highestTransaction = transaction;
            }
        }

        return highestTransaction;
    }




    public Transaction getTransactionWithLowestmount() {
        if (transactions == null) {
            transactions = getAllTransactions();
        }

        Transaction lowestTransaction = null;
        double lowestAmount = Double.MAX_VALUE;

        for (Transaction transaction : transactions) {
            if (transaction.getAmount() < lowestAmount) {
                lowestAmount = transaction.getAmount();
                lowestTransaction = transaction;
            }
        }
        return lowestTransaction;
    }

    public double getAverageTransactionAmount() {
        if (transactions == null) {
            transactions = getAllTransactions();
        }

        double totalAmount = getTotalTransactionAmount();
        int transactionCount = transactions.size();

        if (transactionCount > 0) {
            return totalAmount / transactionCount;
        } else {
            return 0d;
        }
    }
}





----------------------------------------------------------------------------------- (DONT COPY BELOW)


package com.tasks.problem;
import java.time.LocalDate;
import com.opencsv.bean.CsvBindByName;
import com.opencsv.bean.CsvDate;

public class Transaction {
	
	@CsvBindByName(column = "Type")
	private String type;
	
	@CsvBindByName(column = "Amount")
	private Double amount;
	
	@CsvBindByName(column = "Date")
	@CsvDate(value = "yyyy-MM-dd")
	private LocalDate date;
	public String getType() {
		return type;
	}
	public void setType(String type) {
		this.type = type;
	}
	public Double getAmount() {
		return amount;
	}
	public void setAmount(double amount) {
		this.amount = amount;
	}
	public LocalDate getDate() {
		return date;
	}
	public void setDate(LocalDate date) {
		this.date = date;
	}
	
}
